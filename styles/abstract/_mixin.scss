@use "sass:math";
@use "sass:map";
@use "../function" as *;

//Background cover
@mixin background-cover($pos: center) {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center $pos;
}

//background-overlay
@mixin bg-img-overlay($path: null) {
  @if $path != null {
    background-image: url($path), linear-gradient(to bottom, transparent, hsla(0, 0%, 1%, 0.635));
    background-blend-mode: multiply;
  }
}

//Custom-variables
@mixin custom-variables($variables...) {
  $class: map-merge-multiple($variables...);
  @each $order, $family in $class {
    @each $genus, $species in map.get($family, "values") {
      --#{map.get($family, 'class')}-#{map.get($family, 'property')}-#{$genus}: #{$species};
    }
  }
}

//font-properties
@mixin fonts-props($size: null, $family: null, $weight: normal, $line: null) {
  font-size: to-rem($size);
  font-family: $family;
  font-weight: $weight;
  line-height: $line;
}

//aspect ratio
@mixin aspect-ratio($width, $height) {
  padding-top: math.div($height, $width) * 100%;
  height: 0;
  max-height: $height;
}

//grid
@mixin grid() {
  display: grid;
  @content;
}

//grid-column
@mixin grid-column($col: 1, $size: 1fr, $space: space-between) {
  display: grid;
  grid-template-columns: repeat($col, $size);
  justify-content: $space;
  align-items: center;
}

//grid-center
@mixin grid-column-center($col: 1, $size: 1fr) {
  display: grid;
  grid-template-columns: repeat($col, $size);
  justify-content: center;
  align-items: center;
}

//col-span
@mixin col-span($start: 1, $end: 2) {
  display: grid;
  grid-column: $start / span $end;
}
//row span
@mixin row-span($start: 1, $end: 2) {
  display: grid;
  grid-row: $start / span $end;
}
